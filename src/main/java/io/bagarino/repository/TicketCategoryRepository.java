/**
 * This file is part of bagarino.
 *
 * bagarino is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * bagarino is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with bagarino.  If not, see <http://www.gnu.org/licenses/>.
 */
package io.bagarino.repository;

import io.bagarino.datamapper.AutoGeneratedKey;
import io.bagarino.datamapper.Bind;
import io.bagarino.datamapper.Query;
import io.bagarino.datamapper.QueryRepository;
import io.bagarino.model.TicketCategory;
import org.apache.commons.lang3.tuple.Pair;

import java.time.ZonedDateTime;
import java.util.List;

@QueryRepository
public interface TicketCategoryRepository {

    @Query("insert into ticket_category(inception, expiration, name, description, max_tickets, price_cts, access_restricted) " +
            "values(:inception, :expiration, :name, :description, :max_tickets, :price, :accessRestricted)")
    @AutoGeneratedKey("id")
    Pair<Integer, Integer> insert(@Bind("inception") ZonedDateTime inception,
                                  @Bind("expiration") ZonedDateTime expiration,
                                  @Bind("name") String name,
                                  @Bind("description") String description,
                                  @Bind("max_tickets") int maxTickets,
                                  @Bind("price") int price,
                                  @Bind("accessRestricted") boolean accessRestricted);

    @Query("select * from ticket_category where id = :id")
    TicketCategory getById(@Bind("id") int id);

    @Query("select * from ticket_category inner join j_event_ticket_category on ticket_category_id = id " +
            "where event_id = :eventId order by inception asc, expiration asc, id asc")
    List<TicketCategory> findAllTicketCategories(@Bind("eventId") int eventId);

    @Query("update ticket_category set inception = :inception, expiration = :expiration, " +
            "max_tickets = :max_tickets, price_cts = :price, access_restricted = :accessRestricted where id = :id")
    int update(@Bind("id") int id,
               @Bind("inception") ZonedDateTime inception,
               @Bind("expiration") ZonedDateTime expiration,
               @Bind("max_tickets") int maxTickets,
               @Bind("price") int price,
               @Bind("accessRestricted") boolean accessRestricted);

    @Query("update ticket_category set max_tickets = :max_tickets where id = :id")
    int updateSeatsAvailability(@Bind("id") int id, @Bind("max_tickets") int maxTickets);
}
